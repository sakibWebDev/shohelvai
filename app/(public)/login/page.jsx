// app/login/page.tsx
'use client'
import { useState } from "react";
import Link from "next/link";
import axiosInstance from "@/lib/axios";
import toast from "react-hot-toast";
import { useRouter } from "next/navigation";

export default function LoginPage() {
  const [form, setForm] = useState({ email: "", password: "" });
  const [message, setMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const router = useRouter();


  const handleSubmit = async (e) => {
  e.preventDefault();
  setMessage("рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...");
  setIsLoading(true);

  try {
    const res = await axiosInstance.post("/api/auth/login", form);

    if (res.status === 200) {
      // тЬЕ Successful login
      setMessage("тЬЕ рж▓ржЧржЗржи рж╕ржлрж▓!");
      toast.success("рж▓ржЧржЗржи рж╕ржлрж▓ рж╣рзЯрзЗржЫрзЗ!");
      setForm({ email: "", password: "" });

      // тЬЕ Redirect to Home page after login
      router.push("/");
    } else {
      setMessage("тЭМ рж▓ржЧржЗржи ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ");
    }
  } catch (err) {
    console.error("Login error:", err.response?.data || err.message);
    setMessage("тЭМ " + (err.response?.data?.error || "Network error"));
    toast.error(err.response?.data?.error || "ржирзЗржЯржУрзЯрж╛рж░рзНржХ рждрзНрж░рзБржЯрж┐!");
  }

  setIsLoading(false);
};


  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8">
      <div className="w-full max-w-6xl mx-auto bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl shadow-2xl overflow-hidden">
        <div className="grid md:grid-cols-2 gap-8 items-center p-8">
          {/* Left Side - Banner Content */}
          <div className="text-white space-y-6">
            <h1 className="text-4xl md:text-5xl font-bold bg-white text-green-600 px-4 py-2 rounded-lg inline-block">
              ржЪрж╛рж╖рзАржнрж╛ржЗ.
            </h1>
            
            <div className="space-y-4 text-lg">
              <p className="flex items-start gap-2">
                <span className="text-2xl">ЁЯМ╛</span>
                <span className="flex-1">ржЪрж╛рж╖рзА ржнрж╛ржЗ-ржП рж╕рзНржмрж╛ржЧрждржо! ржПржЦрж╛ржирзЗ ржЖржкржирж┐ ржЙржирзНржирждржорж╛ржирзЗрж░ ржмрзАржЬ ржУ ржХрзГрж╖рж┐ ржкржгрзНржп ржкрж╛ржмрзЗржиред</span>
              </p>
              
              <p className="flex items-start gap-2">
                <span className="text-2xl">тнР</span>
                <span className="flex-1">ржЖржкржирж╛рж░ ржлрж╕рж▓рзЗрж░ ржЬржирзНржп рж╕рзЗрж░рж╛ ржЧрзБржгржЧржд ржорж╛ржи ржЖржорж░рж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж┐ред</span>
              </p>
              
              <p className="flex items-start gap-2">
                <span className="text-2xl">ЁЯФм</span>
                <span className="flex-1">ржЖржорж╛ржжрзЗрж░ ржкржгрзНржп ржмрзИржЬрзНржЮрж╛ржирж┐ржХржнрж╛ржмрзЗ ржирж┐рж░рзНржмрж╛ржЪрж┐ржд, ржпрж╛рждрзЗ ржЖржкржирж╛рж░ ржлрж╕рж▓ ржмрзЗрж╢рж┐ ржЙрзОржкрж╛ржжржирж╢рзАрж▓ ржУ рж╕рзБрж╕рзНрже ржерж╛ржХрзЗред</span>
              </p>
              
              <p className="flex items-start gap-2">
                <span className="text-2xl">ЁЯМ▒</span>
                <span className="flex-1 font-semibold text-yellow-200">ржЪрж╛рж╖рзА ржнрж╛ржЗ тАФ ржЖржкржирж╛рж░ ржХрзГрж╖рж┐рж░ рж╕рзЗрж░рж╛ рж╕рж╣ржЪрж░ред</span>
              </p>
            </div>
          </div>

          {/* Right Side - Login Form */}
          <form onSubmit={handleSubmit} className="bg-white p-8 rounded-2xl shadow-xl">
            {/* Header */}
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-gray-800 mb-2">рж▓ржЧржЗржи</h2>
              <div className="w-20 h-1 bg-blue-500 mx-auto rounded-full"></div>
              <p className="text-gray-600 mt-2">ржЖржкржирж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗ рж▓ржЧржЗржи ржХрж░рзБржи</p>
            </div>

            {/* Form Fields */}
            <div className="space-y-5">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ржЗржорзЗржЗрж▓
                </label>
                <input
                  type="email"
                  placeholder="ржЖржкржирж╛рж░ ржЗржорзЗржЗрж▓ рж▓рж┐ржЦрзБржи"
                  value={form.email}
                  onChange={(e) => setForm({ ...form, email: e.target.value })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб
                </label>
                <div className="relative">
                  <input
                    type={showPassword ? "text" : "password"}
                    placeholder="ржЖржкржирж╛рж░ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб рж▓рж┐ржЦрзБржи"
                    value={form.password}
                    onChange={(e) => setForm({ ...form, password: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors pr-12"
                    required
                  />
                  <button
                    type="button"
                    onClick={togglePasswordVisibility}
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none"
                  >
                    {showPassword ? (
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L6.59 6.59m9.02 9.02l3.83 3.83" />
                      </svg>
                    ) : (
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                      </svg>
                    )}
                  </button>
                </div>
              </div>
            </div>

            {/* Login Button */}
            <button
              type="submit"
              disabled={isLoading}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-semibold mt-6 disabled:opacity-50 disabled:cursor-not-allowed transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
            >
              {isLoading ? "рж▓ржЧржЗржи рж╣ржЪрзНржЫрзЗ..." : "рж▓ржЧржЗржи"}
            </button>

            {/* Signup Link */}
            <div className="text-center mt-4">
              <p className="text-gray-600 text-sm">
                ржирждрзБржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА?{" "}
                <Link href="/signup" className="text-blue-600 hover:text-blue-800 font-medium transition-colors">
                  рж╕рж╛ржЗржи ржЖржк ржХрж░рзБржи
                </Link>
              </p>
            </div>

            {/* Message Display */}
            {message && !message.includes("рж╕ржлрж▓!") && (
              <div className={`text-center mt-4 p-3 rounded-lg ${
                message.includes("тЬЕ") 
                  ? "bg-green-50 text-green-800 border border-green-200" 
                  : message.includes("тЭМ")
                  ? "bg-red-50 text-red-800 border border-red-200"
                  : "bg-blue-50 text-blue-800 border border-blue-200"
              }`}>
                <p className="text-sm font-medium">{message}</p>
              </div>
            )}

            {/* Success State */}
            {message.includes("рж╕ржлрж▓!") && (
              <div className="text-center mt-6 p-4 bg-green-50 rounded-lg border border-green-200">
                <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
                  <svg className="w-6 h-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </div>
                <h3 className="text-lg font-semibold text-green-800">рж▓ржЧржЗржи рж╕ржлрж▓!</h3>
              </div>
            )}
          </form>
        </div>
      </div>
    </div>
  );
}