// app/signup/page.tsx
'use client'
import { useState } from "react";
import Link from "next/link";
import axios from "axios";
import toast from "react-hot-toast";

export default function SignupPage() {
  const [form, setForm] = useState({ name: "", email: "", password: "" });
  const [message, setMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [showPassword, setShowPassword] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();

    setMessage("рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...");
    setIsLoading(true);

    try {
      const res = await axios.post("/api/auth/signup", form);

      if (res.status === 200) {
        setMessage("тЬЕ рж╕рж╛ржЗржиржЖржк рж╕ржлрж▓!");
        toast.success("рж╕рж╛ржЗржиржЖржк рж╕ржлрж▓!");
        setForm({ name: "", email: "", password: "" });
      } else {
        setMessage("тЭМ рж╕рж╛ржЗржиржЖржк ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ");
      }
    } catch (err) {
      console.error(err);
      setMessage("тЭМ " + (err.response?.data?.error || "Network error"));
    }

    setIsLoading(false);
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8">
      <div className="w-full max-w-6xl mx-auto bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl shadow-2xl overflow-hidden">
        <div className="grid md:grid-cols-2 gap-8 items-center p-8">
          
          {/* Left Side - Banner Content */}
          <div className="text-white space-y-6">
            <h1 className="text-4xl md:text-5xl font-bold bg-white text-green-600 px-4 py-2 rounded-lg inline-block">
              ржЪрж╛рж╖рзАржнрж╛ржЗ.
            </h1>
            <div className="space-y-4 text-lg">
              <p className="flex items-start gap-2"><span className="text-2xl">ЁЯМ╛</span>ржЪрж╛рж╖рзА ржнрж╛ржЗ-ржП рж╕рзНржмрж╛ржЧрждржо! ржПржЦрж╛ржирзЗ ржЖржкржирж┐ ржЙржирзНржирждржорж╛ржирзЗрж░ ржмрзАржЬ ржУ ржХрзГрж╖рж┐ ржкржгрзНржп ржкрж╛ржмрзЗржиред</p>
              <p className="flex items-start gap-2"><span className="text-2xl">тнР</span>ржЖржкржирж╛рж░ ржлрж╕рж▓рзЗрж░ ржЬржирзНржп рж╕рзЗрж░рж╛ ржЧрзБржгржЧржд ржорж╛ржи ржЖржорж░рж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж┐ред</p>
              <p className="flex items-start gap-2"><span className="text-2xl">ЁЯФм</span>ржЖржорж╛ржжрзЗрж░ ржкржгрзНржп ржмрзИржЬрзНржЮрж╛ржирж┐ржХржнрж╛ржмрзЗ ржирж┐рж░рзНржмрж╛ржЪрж┐ржд, ржпрж╛рждрзЗ ржЖржкржирж╛рж░ ржлрж╕рж▓ ржмрзЗрж╢рж┐ ржЙрзОржкрж╛ржжржирж╢рзАрж▓ ржУ рж╕рзБрж╕рзНрже ржерж╛ржХрзЗред</p>
              <p className="flex items-start gap-2"><span className="text-2xl">ЁЯМ▒</span><span className="flex-1 font-semibold text-yellow-200">ржЪрж╛рж╖рзА ржнрж╛ржЗ тАФ ржЖржкржирж╛рж░ ржХрзГрж╖рж┐рж░ рж╕рзЗрж░рж╛ рж╕рж╣ржЪрж░ред</span></p>
            </div>
          </div>

          {/* Right Side - Signup Form */}
          <form onSubmit={handleSubmit} className="bg-white p-8 rounded-2xl shadow-xl">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-gray-800 mb-2">рж╕рж╛ржЗржи ржЖржк</h2>
              <div className="w-20 h-1 bg-blue-500 mx-auto rounded-full"></div>
              <p className="text-gray-600 mt-2">ржЖржкржирж╛рж░ ржирждрзБржи ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рждрзИрж░рж┐ ржХрж░рзБржи</p>
            </div>

            <div className="space-y-5">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ржирж╛ржо</label>
                <input
                  type="text"
                  placeholder="ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи"
                  value={form.name}
                  onChange={(e) => setForm({ ...form, name: e.target.value })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-colors"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ржЗржорзЗржЗрж▓</label>
                <input
                  type="email"
                  placeholder="ржЖржкржирж╛рж░ ржЗржорзЗржЗрж▓ рж▓рж┐ржЦрзБржи"
                  value={form.email}
                  onChange={(e) => setForm({ ...form, email: e.target.value })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-colors"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб</label>
                <div className="relative">
                  <input
                    type={showPassword ? "text" : "password"}
                    placeholder="ржЖржкржирж╛рж░ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб рж▓рж┐ржЦрзБржи"
                    value={form.password}
                    onChange={(e) => setForm({ ...form, password: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 pr-12 transition-colors"
                    required
                  />
                  <button
                    type="button"
                    onClick={togglePasswordVisibility}
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500"
                  >
                    {showPassword ? "Hide" : "Show"}
                  </button>
                </div>
              </div>
            </div>

            <button
              type="submit"
              disabled={isLoading}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-semibold mt-6 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              {isLoading ? "рж╕рж╛ржЗржи ржЖржк рж╣ржЪрзНржЫрзЗ..." : "рж╕рж╛ржЗржи ржЖржк"}
            </button>

            <div className="text-center mt-4">
              <p className="text-gray-600 text-sm">
                ржЗрждрж┐ржоржзрзНржпрзЗ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржЖржЫрзЗ?{" "}
                <Link href="/login" className="text-blue-600 hover:text-blue-800 font-medium">рж▓ржЧржЗржи ржХрж░рзБржи</Link>
              </p>
            </div>

            {message && (
              <div className={`text-center mt-4 p-3 rounded-lg ${
                message.includes("тЬЕ") ? "bg-green-50 text-green-800 border border-green-200" :
                "bg-red-50 text-red-800 border border-red-200"
              }`}>
                <p className="text-sm font-medium">{message}</p>
              </div>
            )}
          </form>
        </div>
      </div>
    </div>
  );
}
